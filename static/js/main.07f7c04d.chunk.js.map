{"version":3,"sources":["PasswordStrengthMeter.js","AdvancedOptions.js","App.js","reportWebVitals.js","index.js"],"names":["PasswordStrengthMeter","_ref","strength","width","color","React","createElement","Fragment","className","style","background","AdvancedOptions","options","setOptions","handleChange","e","name","type","checked","value","target","parseInt","htmlFor","id","min","length","onChange","includeLowercase","includeUppercase","includeNumbers","includeSpecial","App","password","setPassword","useState","showPassword","setShowPassword","setStrength","copyMessage","setCopyMessage","showAdvanced","setShowAdvanced","useEffect","hasLower","test","hasUpper","hasNumber","hasSpecial","FaLock","placeholder","onClick","v","FaEyeSlash","FaEye","copyToClipboard","navigator","clipboard","writeText","then","setTimeout","FaCopy","generatePassword","charset","alert","gen","i","charAt","Math","floor","random","FaSyncAlt","FaCogs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.07f7c04d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function PasswordStrengthMeter({ strength }) {\r\n  // Define % y color según nivel\r\n  let width = \"33%\";\r\n  let color = \"#dc3545\"; // rojo\r\n  if (strength === \"Segura\") {\r\n    width = \"66%\";\r\n    color = \"#ffc107\"; // amarillo\r\n  } else if (strength === \"Muy segura\") {\r\n    width = \"100%\";\r\n    color = \"#28a745\"; // verde\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"strength-bar\">\r\n        <div\r\n          className=\"strength-bar__fill\"\r\n          style={{ width, background: color }}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"strength-text\"\r\n        style={{ color }}\r\n      >\r\n        {strength}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AdvancedOptions({ options, setOptions }) {\r\n  const handleChange = (e) => {\r\n    const { name, type, checked, value } = e.target;\r\n    setOptions({\r\n      ...options,\r\n      [name]: type === \"checkbox\" ? checked : parseInt(value),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Opciones Avanzadas</h4>\r\n      <div className=\"content\">\r\n        {/* Longitud abarca 2 columnas */}\r\n        <div className=\"option-row length-row\">\r\n          <label htmlFor=\"length\">Longitud:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"length\"\r\n            name=\"length\"\r\n            min=\"4\"\r\n            value={options.length}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <label className=\"option-row\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"includeLowercase\"\r\n            checked={options.includeLowercase}\r\n            onChange={handleChange}\r\n          />\r\n          Incluir letras minúsculas\r\n        </label>\r\n\r\n        <label className=\"option-row\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"includeUppercase\"\r\n            checked={options.includeUppercase}\r\n            onChange={handleChange}\r\n          />\r\n          Incluir letras mayúsculas\r\n        </label>\r\n\r\n        <label className=\"option-row\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"includeNumbers\"\r\n            checked={options.includeNumbers}\r\n            onChange={handleChange}\r\n          />\r\n          Incluir números\r\n        </label>\r\n\r\n        <label className=\"option-row\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"includeSpecial\"\r\n            checked={options.includeSpecial}\r\n            onChange={handleChange}\r\n          />\r\n          Incluir caracteres especiales\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FaCopy,\n  FaSyncAlt,\n  FaCogs,\n  FaLock,\n  FaEye,\n  FaEyeSlash,\n} from \"react-icons/fa\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport AdvancedOptions from \"./AdvancedOptions\";\nimport \"./App.css\";\n\nfunction App() {\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [strength, setStrength] = useState(\"\");\n  const [copyMessage, setCopyMessage] = useState(\"\");\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [options, setOptions] = useState({\n    length: 8,\n    includeLowercase: true,\n    includeUppercase: true,\n    includeNumbers: true,\n    includeSpecial: false,\n  });\n\n  // Evalúa la fortaleza cada vez que cambia la contraseña\n  useEffect(() => {\n    if (password.length < 6) return setStrength(\"Poco segura\");\n    const hasLower = /[a-z]/.test(password);\n    const hasUpper = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSpecial = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n    if (password.length >= 8 && hasLower && hasUpper && hasNumber && hasSpecial) {\n      setStrength(\"Muy segura\");\n    } else {\n      setStrength(\"Segura\");\n    }\n  }, [password]);\n\n  // Copiar al portapapeles\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(password).then(() => {\n      setCopyMessage(\"¡Contraseña copiada!\");\n      setTimeout(() => setCopyMessage(\"\"), 3000);\n    });\n  };\n\n  // Generar contraseña aleatoria\n  const generatePassword = () => {\n    let charset = \"\";\n    if (options.includeLowercase) charset += \"abcdefghijklmnopqrstuvwxyz\";\n    if (options.includeUppercase) charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (options.includeNumbers) charset += \"0123456789\";\n    if (options.includeSpecial) charset += \"!@#$%^&*(),.?\\\":{}|<>\";\n    if (!charset) return alert(\"Selecciona al menos un tipo de carácter.\");\n\n    let gen = \"\";\n    for (let i = 0; i < options.length; i++) {\n      gen += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n    setPassword(gen);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-title\">Fortaleza de Contraseña</h1>\n\n      {/* Input + Show/Hide */}\n      <div className=\"input-group\">\n        <label>Contraseña:</label>\n        <div className=\"input-wrapper\">\n          <FaLock />\n          <input\n            type={showPassword ? \"text\" : \"password\"}\n            value={password}\n            placeholder=\"Ingresa tu contraseña\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button onClick={() => setShowPassword((v) => !v)}>\n          {showPassword ? <><FaEyeSlash /> Ocultar</> : <><FaEye /> Mostrar</>}\n        </button>\n      </div>\n\n      {/* Barra y texto de fortaleza */}\n      <PasswordStrengthMeter strength={strength} />\n\n      {/* Mensaje Copiado */}\n      {copyMessage && <div className=\"copy-message\">{copyMessage}</div>}\n\n      {/* Botones Principales */}\n      <div className=\"button-group\">\n        <button onClick={copyToClipboard}><FaCopy /> Copiar</button>\n        <button onClick={generatePassword}><FaSyncAlt /> Generar</button>\n        <button onClick={() => setShowAdvanced((v) => !v)}><FaCogs /> Opciones</button>\n      </div>\n\n      {/* Panel de Opciones Avanzadas */}\n      {showAdvanced && (\n        <div className=\"advanced-options\">\n          <AdvancedOptions options={options} setOptions={setOptions} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}